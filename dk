#!/usr/bin/env bash

action=$1
param1=$2
param2=$3

remove_exited_containers() {
  docker rm $(docker ps --all -q -f status=exited)
}

stop_running_containers() {
  docker stop $(docker ps --all -q -f status=running)
}

remove_none_images() {
  # TODO - check dangling images exists !
  docker rmi $(docker images -f "dangling=true" -q)
}

remove_images() {
  case $param1 in
    none)
      remove_none_images
    ;;
    *)
      echo 'unknown image type'
    ;;
  esac
}

remove_dangling_volumes() {
  docker volume rm $(docker volume ls -qf dangling=true)
}

remove_volumes() {
  case $param1 in
    none)
      remove_dangling_volumes
    ;;
    *)
      echo 'unknown volume type'
    ;;
  esac
}

enter() {
  docker exec -it $param1 /bin/bash -c "export TERM=xterm; exec bash"
}

run() {
  docker run -d $param1
}

ps() {
  docker ps --format '{{.ID}} - {{.Image}} - {{.Status}}' $param1
}

usage() {
  echo 'dk - docker'
  echo '  dk enter <id>   enter running container'
  echo '  dk run <name>   start container by name'
  echo '  dk rmi <type>   remove special type images'
  echo '  dk rmv <type>   remove special type volumes'
  echo '  dk stopall      stop all running containers'
  echo '  dk rmall        remove all exited containers'
  echo '  dk ps           ps with special format'
}

case $action in
  enter)
    enter
  ;;
  stopall)
    stop_running_containers
  ;;
  rmall)
    remove_exited_containers
  ;;
  rmv)
    remove_volumes
  ;;
  rmi)
    remove_images
  ;;
  run)
    run
  ;;
  ps)
    ps
  ;;
  *)
    usage
  ;;
esac
